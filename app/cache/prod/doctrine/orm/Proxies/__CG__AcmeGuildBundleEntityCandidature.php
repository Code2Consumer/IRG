<?php

namespace Proxies\__CG__\Acme\GuildBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Candidature extends \Acme\GuildBundle\Entity\Candidature implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'id', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'guildId', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'userId', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'guildName', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'userName', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'date', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'message', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'messageTitre', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'situation');
        }

        return array('__isInitialized__', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'id', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'guildId', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'userId', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'guildName', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'userName', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'date', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'message', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'messageTitre', '' . "\0" . 'Acme\\GuildBundle\\Entity\\Candidature' . "\0" . 'situation');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Candidature $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGuildId($guildId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuildId', array($guildId));

        return parent::setGuildId($guildId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGuildId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuildId', array());

        return parent::getGuildId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($userId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', array($userId));

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGuildName($guildName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuildName', array($guildName));

        return parent::setGuildName($guildName);
    }

    /**
     * {@inheritDoc}
     */
    public function getGuildName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuildName', array());

        return parent::getGuildName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName($userName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', array($userName));

        return parent::setUserName($userName);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', array());

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessage', array($message));

        return parent::setMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessage', array());

        return parent::getMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageTitre($messageTitre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageTitre', array($messageTitre));

        return parent::setMessageTitre($messageTitre);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageTitre', array());

        return parent::getMessageTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setSituation($situation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSituation', array($situation));

        return parent::setSituation($situation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSituation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSituation', array());

        return parent::getSituation();
    }

}
